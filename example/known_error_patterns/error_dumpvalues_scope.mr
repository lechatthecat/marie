fn main (): nil
{
  // もしくは、以下をよびだしてから
  println(test2(1.9));
  // nが参照できていまう
  println(n);
  // 参照はできなくなったが
  // backtraceをちゃんとつくっていないからかエラーの出方がおかしい

}

fn test2(n: float): float
{
  // nが存在確認に失敗する
  // この関数を呼び出すようにすると最初に呼び出し処理がかかり、
  // そのなかでnの定義をするのでエラーにならない
  // 関数の呼び出しがない場合にnの定義がないからエラーになる

  // そのため、今は定義時にもnの定義をするようにしたが、
  // 今度はnの定義が関数の呼び出しが終わっているのに残ってしまう。
  return n;
}
