//TODO verifier errorの場合、エラー内容をわかりやすくする
// TODO 引数の型制限
// TODO 以下の状態のときc, dをけすとおかしなエラーになる
// TODO locals_sizeが常に0なので関数定義後にちゃんとローカル変数の残骸がすべてpopできているか不安 できていなさそうなら定義時にpush時に+1, pop時に-1して残った数字分だけpopする？
// TODO 比較が数値同士、string同士でしかできない どっちかがstring, もう片方がnumberの場合に両方numberに変換してから比較する処理を入れる
// TODO ↑のnumberへの変換に失敗したらエラーを返す処理を入れる 
// TODO GreaterThanOrEruqal, LesserThanOrEuqalもうごくがなぜうごくかわからない
//fn test (a: number, mut b: number, c : number, d:number) : number
//{
//    let mut aa = a / d;
//    println(aa);
//    aa
//}
//println(test(1, 2, 3, 3));

//fn test (mut a: string, b: number)
//{   
//    println(test2(3, 4));
//}

//fn test2 (mut a: string, b: number) : string
//{  
//    "a" 
//}

//test("1", 2);

// 全角文字がコメントアウトされていない場合にエラーになる
// これがエラーになる
// たぶんif文外で定義されたものはblockの引数でわたしてあげないといけない？
//fn a (a: bool) : void
//{
//    if (a) {
//        let mut b = false;
//        if (a) {
//            b = true;
//        }
//        if (b) {
//            println("fuck");
//        }
//    }
//}
// a(true);

fn a () : void
{
    for (let mut i = 1; i <= 3; i = i + 1) {
        //println(i);
    }
}

a();