use crate::bytecode::bytecode_interpreter::Interpreter;
pub trait CallFuncPointer {
    fn call_func_pointer(&mut self, fn_code: *const u8, arguments: &[i64]) -> Result<i64, String>;
}

impl CallFuncPointer for Interpreter {
    fn call_func_pointer(
        &mut self,
        fn_code: *const u8,
        arguments: &[i64],
    ) -> Result<i64, String> {
        match arguments.len() {
            0 => {
                // Cast the raw pointer to a typed function pointer. This is unsafe, because
                // this is the critical point where you have to trust that the generated code
                // is safe to be called.
                let func: unsafe extern "C" fn(*mut Interpreter) -> i64 = unsafe { std::mem::transmute(fn_code) };
                // And now we can call it!
                Ok(unsafe { func(self as *mut _) })
            }
            1 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0]) })
            }
            2 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1]) })
            }
            3 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2]) })
            }
            4 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3]) })
            }
            5 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]) })
            }
            6 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]) })
            }
            7 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]) })
            }
            8 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]) })
            }
            9 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]) })
            }
            10 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]) })
            }
            11 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]) })
            }
            12 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]) })
            }
            13 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]) })
            }
            14 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]) })
            }
            15 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]) })
            }
            16 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]) })
            }
            17 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]) })
            }
            18 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]) })
            }
            19 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]) })
            }
            20 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]) })
            }
            21 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]) })
            }
            22 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]) })
            }
            23 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22]) })
            }
            24 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23]) })
            }
            25 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24]) })
            }
            26 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25]) })
            }
            27 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26]) })
            }
            28 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27]) })
            }
            29 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28]) })
            }
            30 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29]) })
            }
            31 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30]) })
            }
            32 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31]) })
            }
            33 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32]) })
            }
            34 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33]) })
            }
            35 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34]) })
            }
            36 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35]) })
            }
            37 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36]) })
            }
            38 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37]) })
            }
            39 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38]) })
            }
            40 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39]) })
            }
            41 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40]) })
            }
            42 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41]) })
            }
            43 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42]) })
            }
            44 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43]) })
            }
            45 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44]) })
            }
            46 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45]) })
            }
            47 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46]) })
            }
            48 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47]) })
            }
            49 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48]) })
            }
            50 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49]) })
            }
            51 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50]) })
            }
            52 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51]) })
            }
            53 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52]) })
            }
            54 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53]) })
            }
            55 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54]) })
            }
            56 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55]) })
            }
            57 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56]) })
            }
            58 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57]) })
            }
            59 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58]) })
            }
            60 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59]) })
            }
            61 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60]) })
            }
            62 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61]) })
            }
            63 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62]) })
            }
            64 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63]) })
            }
            65 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64]) })
            }
            66 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65]) })
            }
            67 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66]) })
            }
            68 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67]) })
            }
            69 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68]) })
            }
            70 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69]) })
            }
            71 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70]) })
            }
            72 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71]) })
            }
            73 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72]) })
            }
            74 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73]) })
            }
            75 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74]) })
            }
            76 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75]) })
            }
            77 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76]) })
            }
            78 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77]) })
            }
            79 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78]) })
            }
            80 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79]) })
            }
            81 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80]) })
            }
            82 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81]) })
            }
            83 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82]) })
            }
            84 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83]) })
            }
            85 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84]) })
            }
            86 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85]) })
            }
            87 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86]) })
            }
            88 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87]) })
            }
            89 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88]) })
            }
            90 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89]) })
            }
            91 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90]) })
            }
            92 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91]) })
            }
            93 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92]) })
            }
            94 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93]) })
            }
            95 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94]) })
            }
            96 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95]) })
            }
            97 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96]) })
            }
            98 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97]) })
            }
            99 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98]) })
            }
            100 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99]) })
            }
            101 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100]) })
            }
            102 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101]) })
            }
            103 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102]) })
            }
            104 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103]) })
            }
            105 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104]) })
            }
            106 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105]) })
            }
            107 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106]) })
            }
            108 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107]) })
            }
            109 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108]) })
            }
            110 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109]) })
            }
            111 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110]) })
            }
            112 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111]) })
            }
            113 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112]) })
            }
            114 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113]) })
            }
            115 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114]) })
            }
            116 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115]) })
            }
            117 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116]) })
            }
            118 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117]) })
            }
            119 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118]) })
            }
            120 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119]) })
            }
            121 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120]) })
            }
            122 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121]) })
            }
            123 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122]) })
            }
            124 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123]) })
            }
            125 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124]) })
            }
            126 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125]) })
            }
            127 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126]) })
            }
            128 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127]) })
            }
            129 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128]) })
            }
            130 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129]) })
            }
            131 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130]) })
            }
            132 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131]) })
            }
            133 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132]) })
            }
            134 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133]) })
            }
            135 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134]) })
            }
            136 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135]) })
            }
            137 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136]) })
            }
            138 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137]) })
            }
            139 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138]) })
            }
            140 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139]) })
            }
            141 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140]) })
            }
            142 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141]) })
            }
            143 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142]) })
            }
            144 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143]) })
            }
            145 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144]) })
            }
            146 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144], arguments[145]) })
            }
            147 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144], arguments[145], arguments[146]) })
            }
            148 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144], arguments[145], arguments[146], arguments[147]) })
            }
            149 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144], arguments[145], arguments[146], arguments[147], arguments[148]) })
            }
            150 => {
                let func: unsafe extern "C" fn(*mut Interpreter, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) -> i64 = unsafe { std::mem::transmute(fn_code) };
                Ok(unsafe { func(self as *mut _, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21], arguments[22], arguments[23], arguments[24], arguments[25], arguments[26], arguments[27], arguments[28], arguments[29], arguments[30], arguments[31], arguments[32], arguments[33], arguments[34], arguments[35], arguments[36], arguments[37], arguments[38], arguments[39], arguments[40], arguments[41], arguments[42], arguments[43], arguments[44], arguments[45], arguments[46], arguments[47], arguments[48], arguments[49], arguments[50], arguments[51], arguments[52], arguments[53], arguments[54], arguments[55], arguments[56], arguments[57], arguments[58], arguments[59], arguments[60], arguments[61], arguments[62], arguments[63], arguments[64], arguments[65], arguments[66], arguments[67], arguments[68], arguments[69], arguments[70], arguments[71], arguments[72], arguments[73], arguments[74], arguments[75], arguments[76], arguments[77], arguments[78], arguments[79], arguments[80], arguments[81], arguments[82], arguments[83], arguments[84], arguments[85], arguments[86], arguments[87], arguments[88], arguments[89], arguments[90], arguments[91], arguments[92], arguments[93], arguments[94], arguments[95], arguments[96], arguments[97], arguments[98], arguments[99], arguments[100], arguments[101], arguments[102], arguments[103], arguments[104], arguments[105], arguments[106], arguments[107], arguments[108], arguments[109], arguments[110], arguments[111], arguments[112], arguments[113], arguments[114], arguments[115], arguments[116], arguments[117], arguments[118], arguments[119], arguments[120], arguments[121], arguments[122], arguments[123], arguments[124], arguments[125], arguments[126], arguments[127], arguments[128], arguments[129], arguments[130], arguments[131], arguments[132], arguments[133], arguments[134], arguments[135], arguments[136], arguments[137], arguments[138], arguments[139], arguments[140], arguments[141], arguments[142], arguments[143], arguments[144], arguments[145], arguments[146], arguments[147], arguments[148], arguments[149]) })
            }
            _ => Err("Too many arguments.".to_string())
        }
    }
}
